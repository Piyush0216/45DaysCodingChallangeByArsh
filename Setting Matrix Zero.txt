Question ->

Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.


Example 1:

Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]

Example 2:

Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]



_______SOLUTION_______

// In this problem if we get 0 in the row or column then we have to  make that row or column zero.

// we can also solve this prblm using two vector for storing the index of row and columm where we get 0;
// then we will pushback the index of row in row vector and coloumn index in column vector;
// traversing each row and seprately and setting zero from the index to the last of them;;

//creating two vectors for row and column and also getting size of row and column
        
        int n = mat.size();  // size of row
        int m = mat[0].size();  // size of column
        vector<int> r,c;

// traversing the rows and column for finding the index of zero where we r getting
        for(int i=0; i<n; i++){
            for(int j = 0; j<m; j++){
                if(mat[i][j] == 0){
                    r.push_back(i);     // tell rows which have to be 0
                    c.push_back(j);     // tell column which have to be 0
                }
            }
        }

        // setting rows 0 ;

        for(int i=0; i<r.size(); i++){
            int index = r[i];
            for(int j = 0; j<m; j++){
                mat[index][j]=0;
            }
        }

        // column -> 0

        for(int i=0; i<c.size(); i++){
            int index = c[i];
            for(int j = 0; j<n; j++){
                mat[j][index]=0;
            }
        }



// mapping the rows and column index with zero if we find zero in the any index then map that index of row or column with 0; 

void setZeroes(vector<vector<int>>& matrix) {
        unordered_map<int,int> row; 
        map<int,int> column; 
        for(int i=0; i<matrix.size(); i++){
        for(int j=0; j<matrix[0].size(); j++){
            if(matrix[i][j] == 0){
                row[i]++; 
                column[j]++;
            }
        }
     }

// setting zero in from the index of rows and column where we get 0.

     for(int i=0; i<matrix.size(); i++){
        for(int j=0; j<matrix[0].size(); j++){
            if(row.find(i) != row.end() || column.find(j) != column.end())
                matrix[i][j]=0; 
           }
        } 
    }